name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main
      - staging # for bors
      - trying # for bors
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build:
    name: "Build with args: '${{ matrix.OPTIMIZE }}'"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        OPTIMIZE:
          [
            "",
            "--release=safe",
            "--release=fast",
            "--release=small"
          ]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install Zig
        uses: mlugg/setup-zig@v2
        with:
          version: 0.14.0

      - name: Show Zig version
        run: |
          zig version
          zig env

      - name: Build
        run: zig build ${{ matrix.OPTIMIZE }}

      - name: Test
        run: zig build test ${{ matrix.OPTIMIZE }}

  test:
    name: Test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install Zig
        uses: mlugg/setup-zig@v2
        with:
          version: 0.14.0

      - name: Install kcov
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            --no-install-recommends \
            --allow-unauthenticated \
            kcov

      - name: Test
        run: zig build test -Dtest-coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          name: code-coverage-report
          directory: kcov-output
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install Zig
        uses: mlugg/setup-zig@v2
        with:
          version: 0.14.0

      - name: Check formatting
        run: zig fmt --check .
